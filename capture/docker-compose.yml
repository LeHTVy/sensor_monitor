version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - sensor-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://172.232.224.160:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
    networks:
      - sensor-network

  backend:
    build: .
    container_name: backend
    restart: unless-stopped
    depends_on:
      - kafka
    ports:
      - "8082:8080"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      CAPTURE_API_KEY: capture_secure_key_2024
      ADMIN_USERNAME: admin
      ADMIN_PASSWORD: admin123
      USE_ELASTICSEARCH: "true"
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ES_INDEX_PREFIX: sensor-logs
    networks:
      - sensor-network
    volumes:
      - ./logs:/app/logs

  frontend:
    build: ./frontend
    container_name: frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "3000:80"
    networks:
      - sensor-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: unless-stopped
    depends_on:
      - kafka
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: sensor-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - sensor-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.3
    container_name: elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    networks:
      - sensor-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.3
    container_name: kibana
    restart: unless-stopped
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - sensor-network

  collector:
    image: python:3.11-slim
    container_name: collector
    restart: unless-stopped
    depends_on:
      - kafka
      - elasticsearch
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPICS=honeypot-attacks,honeypot-browser,honeypot-traffic
      - KAFKA_GROUP=capture-es-collector
      - ES_HOST=http://elasticsearch:9200
      - ES_INDEX_PREFIX=sensor-logs
      - BATCH_SIZE=500
      - FLUSH_INTERVAL_MS=1000
      - AUTO_OFFSET_RESET=latest
    networks:
      - sensor-network
    volumes:
      - ./collector:/app
    working_dir: /app
    command: ["bash", "-lc", "pip install -r requirements.txt && python -u collector.py"]   

networks:
  sensor-network:
    driver: bridge